# coding: utf-8

"""
    Tableau Services APIs

    Open API specification for Tableau Services APIs

    The version of the OpenAPI document: latest
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.tableau_nlp_lens_publicrest_v1_recommended_visualization_group import TableauNlpLensPublicrestV1RecommendedVisualizationGroup

class TestTableauNlpLensPublicrestV1RecommendedVisualizationGroup(unittest.TestCase):
    """TableauNlpLensPublicrestV1RecommendedVisualizationGroup unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> TableauNlpLensPublicrestV1RecommendedVisualizationGroup:
        """Test TableauNlpLensPublicrestV1RecommendedVisualizationGroup
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `TableauNlpLensPublicrestV1RecommendedVisualizationGroup`
        """
        model = TableauNlpLensPublicrestV1RecommendedVisualizationGroup()
        if include_optional:
            return TableauNlpLensPublicrestV1RecommendedVisualizationGroup(
                name = '',
                description = '',
                recommended_visualizations = [
                    openapi_client.models.tableau/nlp/lens/publicrest/v1/recommended_visualization.tableau.nlp.lens.publicrest.v1.RecommendedVisualization(
                        expression = '', 
                        interpretation = '', 
                        colloquial_alias = '', )
                    ]
            )
        else:
            return TableauNlpLensPublicrestV1RecommendedVisualizationGroup(
        )
        """

    def testTableauNlpLensPublicrestV1RecommendedVisualizationGroup(self):
        """Test TableauNlpLensPublicrestV1RecommendedVisualizationGroup"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
