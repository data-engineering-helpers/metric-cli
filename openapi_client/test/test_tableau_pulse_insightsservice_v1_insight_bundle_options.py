# coding: utf-8

"""
    Tableau Services APIs

    Open API specification for Tableau Services APIs

    The version of the OpenAPI document: latest
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.tableau_pulse_insightsservice_v1_insight_bundle_options import TableauPulseInsightsserviceV1InsightBundleOptions

class TestTableauPulseInsightsserviceV1InsightBundleOptions(unittest.TestCase):
    """TableauPulseInsightsserviceV1InsightBundleOptions unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> TableauPulseInsightsserviceV1InsightBundleOptions:
        """Test TableauPulseInsightsserviceV1InsightBundleOptions
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `TableauPulseInsightsserviceV1InsightBundleOptions`
        """
        model = TableauPulseInsightsserviceV1InsightBundleOptions()
        if include_optional:
            return TableauPulseInsightsserviceV1InsightBundleOptions(
                output_format = 'OUTPUT_FORMAT_UNSPECIFIED',
                now = '',
                time_zone = '',
                score_weights = openapi_client.models.tableau/pulse/insightsservice/v1/score_weights.tableau.pulse.insightsservice.v1.ScoreWeights(
                    impact_score = 1.337, 
                    relevance_score = 1.337, 
                    certainty_score = 1.337, )
            )
        else:
            return TableauPulseInsightsserviceV1InsightBundleOptions(
        )
        """

    def testTableauPulseInsightsserviceV1InsightBundleOptions(self):
        """Test TableauPulseInsightsserviceV1InsightBundleOptions"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
