# coding: utf-8

"""
    Tableau Services APIs

    Open API specification for Tableau Services APIs

    The version of the OpenAPI document: latest
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.tableau_pulse_insightsservice_v1_insight_bundle_input import TableauPulseInsightsserviceV1InsightBundleInput

class TestTableauPulseInsightsserviceV1InsightBundleInput(unittest.TestCase):
    """TableauPulseInsightsserviceV1InsightBundleInput unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> TableauPulseInsightsserviceV1InsightBundleInput:
        """Test TableauPulseInsightsserviceV1InsightBundleInput
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `TableauPulseInsightsserviceV1InsightBundleInput`
        """
        model = TableauPulseInsightsserviceV1InsightBundleInput()
        if include_optional:
            return TableauPulseInsightsserviceV1InsightBundleInput(
                metadata = openapi_client.models.tableau/pulse/insightsservice/v1/metric_metadata.tableau.pulse.insightsservice.v1.MetricMetadata(
                    name = '', 
                    metric_id = '', 
                    definition_id = '', ),
                metric = openapi_client.models.tableau/pulse/insightsservice/v1/input_metric.tableau.pulse.insightsservice.v1.InputMetric(
                    definition = openapi_client.models.tableau/metricqueryservice/types/v1/definition_specification.tableau.metricqueryservice.types.v1.DefinitionSpecification(
                        datasource = openapi_client.models.tableau/metricqueryservice/types/v1/datasource.tableau.metricqueryservice.types.v1.Datasource(
                            id = '', ), 
                        basic_specification = openapi_client.models.tableau/metricqueryservice/types/v1/basic_specification.tableau.metricqueryservice.types.v1.BasicSpecification(
                            measure = openapi_client.models.tableau/metricqueryservice/types/v1/measure.tableau.metricqueryservice.types.v1.Measure(
                                field = '', 
                                aggregation = 'AGGREGATION_UNSPECIFIED', ), 
                            time_dimension = openapi_client.models.tableau/metricqueryservice/types/v1/time_dimension.tableau.metricqueryservice.types.v1.TimeDimension(
                                field = '', ), 
                            filters = [
                                openapi_client.models.tableau/metricqueryservice/types/v1/filter.tableau.metricqueryservice.types.v1.Filter(
                                    field = '', 
                                    operator = 'OPERATOR_UNSPECIFIED', 
                                    values = [
                                        ''
                                        ], 
                                    include_null = True, 
                                    categorical_values = [
                                        openapi_client.models.tableau/metricqueryservice/types/v1/categorical_value.tableau.metricqueryservice.types.v1.CategoricalValue(
                                            string_value = '', 
                                            bool_value = True, 
                                            null_value = 'NULL_VALUE', )
                                        ], )
                                ], ), 
                        abstract_query_specification = openapi_client.models.tableau/metricqueryservice/types/v1/abstract_query_specification.tableau.metricqueryservice.types.v1.AbstractQuerySpecification(
                            abstract_query_string = '', ), 
                        viz_state_specification = openapi_client.models.tableau/metricqueryservice/types/v1/viz_state_specification.tableau.metricqueryservice.types.v1.VizStateSpecification(
                            viz_state_string = '', ), 
                        is_running_total = True, ), 
                    metric_specification = openapi_client.models.tableau/metricqueryservice/types/v1/metric_specification.tableau.metricqueryservice.types.v1.MetricSpecification(
                        measurement_period = openapi_client.models.tableau/metricqueryservice/types/v1/measurement_period.tableau.metricqueryservice.types.v1.MeasurementPeriod(
                            granularity = 'GRANULARITY_UNSPECIFIED', 
                            range = 'RANGE_UNSPECIFIED', ), 
                        comparison = openapi_client.models.tableau/metricqueryservice/types/v1/compare_config.tableau.metricqueryservice.types.v1.CompareConfig(), ), 
                    extension_options = openapi_client.models.tableau/metricqueryservice/types/v1/extension_options.tableau.metricqueryservice.types.v1.ExtensionOptions(
                        allowed_dimensions = [
                            ''
                            ], 
                        allowed_granularities = [
                            'GRANULARITY_UNSPECIFIED'
                            ], 
                        offset_from_today = 56, ), 
                    representation_options = openapi_client.models.tableau/metricqueryservice/types/v1/representation_options.tableau.metricqueryservice.types.v1.RepresentationOptions(
                        type = 'NUMBER_FORMAT_TYPE_UNSPECIFIED', 
                        number_units = openapi_client.models.tableau/metricqueryservice/types/v1/representation_options/number_units.tableau.metricqueryservice.types.v1.RepresentationOptions.NumberUnits(
                            singular_noun = '', 
                            plural_noun = '', ), 
                        sentiment_type = 'SENTIMENT_TYPE_UNSPECIFIED', 
                        row_level_id_field = openapi_client.models.tableau/metricqueryservice/types/v1/representation_options/row_level_id_field.tableau.metricqueryservice.types.v1.RepresentationOptions.RowLevelIDField(
                            identifier_col = '', 
                            identifier_label = '', ), 
                        row_level_entity_names = openapi_client.models.tableau/metricqueryservice/types/v1/representation_options/row_level_entity_names.tableau.metricqueryservice.types.v1.RepresentationOptions.RowLevelEntityNames(
                            entity_name_singular = '', 
                            entity_name_plural = '', ), 
                        row_level_name_field = openapi_client.models.tableau/metricqueryservice/types/v1/representation_options/row_level_name_field.tableau.metricqueryservice.types.v1.RepresentationOptions.RowLevelNameField(
                            name_col = '', ), 
                        currency_code = 'CURRENCY_CODE_UNSPECIFIED', 
                        nested_number_units = openapi_client.models.tableau/metricqueryservice/types/v1/representation_options/number_units.tableau.metricqueryservice.types.v1.RepresentationOptions.NumberUnits(
                            singular_noun = '', 
                            plural_noun = '', ), 
                        nested_row_level_id_field = openapi_client.models.tableau/metricqueryservice/types/v1/representation_options/row_level_id_field.tableau.metricqueryservice.types.v1.RepresentationOptions.RowLevelIDField(
                            identifier_col = '', 
                            identifier_label = '', ), 
                        nested_row_level_name_field = openapi_client.models.tableau/metricqueryservice/types/v1/representation_options/row_level_name_field.tableau.metricqueryservice.types.v1.RepresentationOptions.RowLevelNameField(
                            name_col = '', ), 
                        nested_row_level_entity_names = openapi_client.models.tableau/metricqueryservice/types/v1/representation_options/row_level_entity_names.tableau.metricqueryservice.types.v1.RepresentationOptions.RowLevelEntityNames(
                            entity_name_singular = '', 
                            entity_name_plural = '', ), ), 
                    insights_options = openapi_client.models.tableau/metricqueryservice/types/v1/insights_options.tableau.metricqueryservice.types.v1.InsightsOptions(
                        show_insights = True, 
                        settings = [
                            openapi_client.models.tableau/metricqueryservice/types/v1/insights_options/insight_setting.tableau.metricqueryservice.types.v1.InsightsOptions.InsightSetting(
                                type = 'INSIGHT_TYPE_UNSPECIFIED', 
                                disabled = True, )
                            ], 
                        nested_insight_setting = openapi_client.models.tableau/metricqueryservice/types/v1/insights_options/insight_setting.tableau.metricqueryservice.types.v1.InsightsOptions.InsightSetting(
                            type = 'INSIGHT_TYPE_UNSPECIFIED', 
                            disabled = True, ), ), 
                    goals = openapi_client.models.tableau/pulse/insightsservice/v1/goals.tableau.pulse.insightsservice.v1.Goals(
                        target = openapi_client.models.tableau/metricqueryservice/types/v1/target_value_goal.tableau.metricqueryservice.types.v1.TargetValueGoal(
                            value = 1.337, ), ), )
            )
        else:
            return TableauPulseInsightsserviceV1InsightBundleInput(
        )
        """

    def testTableauPulseInsightsserviceV1InsightBundleInput(self):
        """Test TableauPulseInsightsserviceV1InsightBundleInput"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
