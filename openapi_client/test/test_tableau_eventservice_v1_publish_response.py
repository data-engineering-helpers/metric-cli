# coding: utf-8

"""
    Tableau Services APIs

    Open API specification for Tableau Services APIs

    The version of the OpenAPI document: latest
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.tableau_eventservice_v1_publish_response import TableauEventserviceV1PublishResponse

class TestTableauEventserviceV1PublishResponse(unittest.TestCase):
    """TableauEventserviceV1PublishResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> TableauEventserviceV1PublishResponse:
        """Test TableauEventserviceV1PublishResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `TableauEventserviceV1PublishResponse`
        """
        model = TableauEventserviceV1PublishResponse()
        if include_optional:
            return TableauEventserviceV1PublishResponse(
                event = openapi_client.models.tableau/eventservice/types/v1/event.tableau.eventservice.types.v1.Event(
                    id = '', 
                    event_type = '', 
                    service = '', 
                    user_id = 56, 
                    site_id = 56, 
                    session_id = '', 
                    timestamp = '', 
                    event_properties = openapi_client.models.google/protobuf/any.google.protobuf.Any(
                        type_url = '', 
                        value = 'YQ==', ), 
                    site_luid = '', 
                    user_luid = '', ),
                serialized_event = openapi_client.models.tableau/eventservice/types/v1/serialized_event.tableau.eventservice.types.v1.SerializedEvent(
                    id = '', 
                    type = '', 
                    user_id = 56, 
                    site_id = 56, 
                    session_id = '', 
                    timestamp = '', 
                    details = '', 
                    site_luid = '', 
                    user_luid = '', )
            )
        else:
            return TableauEventserviceV1PublishResponse(
        )
        """

    def testTableauEventserviceV1PublishResponse(self):
        """Test TableauEventserviceV1PublishResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
