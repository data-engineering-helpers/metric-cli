# coding: utf-8

"""
    Tableau Services APIs

    Open API specification for Tableau Services APIs

    The version of the OpenAPI document: latest
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.tableau_pulse_subscriptionservice_v1_list_followed_metrics_groups_response import TableauPulseSubscriptionserviceV1ListFollowedMetricsGroupsResponse

class TestTableauPulseSubscriptionserviceV1ListFollowedMetricsGroupsResponse(unittest.TestCase):
    """TableauPulseSubscriptionserviceV1ListFollowedMetricsGroupsResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> TableauPulseSubscriptionserviceV1ListFollowedMetricsGroupsResponse:
        """Test TableauPulseSubscriptionserviceV1ListFollowedMetricsGroupsResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `TableauPulseSubscriptionserviceV1ListFollowedMetricsGroupsResponse`
        """
        model = TableauPulseSubscriptionserviceV1ListFollowedMetricsGroupsResponse()
        if include_optional:
            return TableauPulseSubscriptionserviceV1ListFollowedMetricsGroupsResponse(
                metric_groups = [
                    openapi_client.models.tableau/metricqueryservice/types/v1/metric_group.tableau.metricqueryservice.types.v1.MetricGroup(
                        group_metadata = openapi_client.models.tableau/metricqueryservice/types/v1/metric_group/group_metadata.tableau.metricqueryservice.types.v1.MetricGroup.GroupMetadata(
                            group_label = '', ), 
                        metrics = [
                            openapi_client.models.tableau/metricqueryservice/types/v1/metric.tableau.metricqueryservice.types.v1.Metric(
                                id = '', 
                                specification = openapi_client.models.tableau/metricqueryservice/types/v1/metric_specification.tableau.metricqueryservice.types.v1.MetricSpecification(
                                    filters = [
                                        openapi_client.models.tableau/metricqueryservice/types/v1/filter.tableau.metricqueryservice.types.v1.Filter(
                                            field = '', 
                                            operator = 'OPERATOR_UNSPECIFIED', 
                                            values = [
                                                ''
                                                ], 
                                            include_null = True, 
                                            categorical_values = [
                                                openapi_client.models.tableau/metricqueryservice/types/v1/categorical_value.tableau.metricqueryservice.types.v1.CategoricalValue(
                                                    string_value = '', 
                                                    bool_value = True, 
                                                    null_value = 'NULL_VALUE', )
                                                ], )
                                        ], 
                                    measurement_period = openapi_client.models.tableau/metricqueryservice/types/v1/measurement_period.tableau.metricqueryservice.types.v1.MeasurementPeriod(
                                        granularity = 'GRANULARITY_UNSPECIFIED', 
                                        range = 'RANGE_UNSPECIFIED', ), 
                                    comparison = openapi_client.models.tableau/metricqueryservice/types/v1/compare_config.tableau.metricqueryservice.types.v1.CompareConfig(), ), 
                                definition_id = '', 
                                is_default = True, 
                                schema_version = '', 
                                metric_version = 56, 
                                goals = openapi_client.models.tableau/metricqueryservice/types/v1/metric_goals.tableau.metricqueryservice.types.v1.MetricGoals(
                                    target = openapi_client.models.tableau/metricqueryservice/types/v1/target_value_goal.tableau.metricqueryservice.types.v1.TargetValueGoal(
                                        value = 1.337, ), ), 
                                is_followed = True, )
                            ], 
                        nested_group_metadata = openapi_client.models.tableau/metricqueryservice/types/v1/metric_group/group_metadata.tableau.metricqueryservice.types.v1.MetricGroup.GroupMetadata(
                            group_label = '', ), )
                    ],
                group_by = 'GROUP_BY_UNSPECIFIED',
                sort_order = 'SORT_ORDER_UNSPECIFIED',
                errors = [
                    openapi_client.models.tableau/metricqueryservice/types/v1/batch_get_metric_errors.tableau.metricqueryservice.types.v1.BatchGetMetricErrors(
                        id = '', 
                        error = '', )
                    ]
            )
        else:
            return TableauPulseSubscriptionserviceV1ListFollowedMetricsGroupsResponse(
        )
        """

    def testTableauPulseSubscriptionserviceV1ListFollowedMetricsGroupsResponse(self):
        """Test TableauPulseSubscriptionserviceV1ListFollowedMetricsGroupsResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
