# coding: utf-8

"""
    Tableau Services APIs

    Open API specification for Tableau Services APIs

    The version of the OpenAPI document: latest
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.tableau_metricqueryservice_types_v1_filter import TableauMetricqueryserviceTypesV1Filter

class TestTableauMetricqueryserviceTypesV1Filter(unittest.TestCase):
    """TableauMetricqueryserviceTypesV1Filter unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> TableauMetricqueryserviceTypesV1Filter:
        """Test TableauMetricqueryserviceTypesV1Filter
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `TableauMetricqueryserviceTypesV1Filter`
        """
        model = TableauMetricqueryserviceTypesV1Filter()
        if include_optional:
            return TableauMetricqueryserviceTypesV1Filter(
                var_field = '',
                operator = 'OPERATOR_UNSPECIFIED',
                values = [
                    ''
                    ],
                include_null = True,
                categorical_values = [
                    openapi_client.models.tableau/metricqueryservice/types/v1/categorical_value.tableau.metricqueryservice.types.v1.CategoricalValue(
                        string_value = '', 
                        bool_value = True, 
                        null_value = 'NULL_VALUE', )
                    ]
            )
        else:
            return TableauMetricqueryserviceTypesV1Filter(
        )
        """

    def testTableauMetricqueryserviceTypesV1Filter(self):
        """Test TableauMetricqueryserviceTypesV1Filter"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
