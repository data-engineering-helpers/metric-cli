# coding: utf-8

"""
    Tableau Services APIs

    Open API specification for Tableau Services APIs

    The version of the OpenAPI document: latest
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.tableau_metricqueryservice_types_v1_metadata import MetricDefinitionMetadata

class TestTableauMetricqueryserviceTypesV1Metadata(unittest.TestCase):
    """TableauMetricqueryserviceTypesV1Metadata unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> MetricDefinitionMetadata:
        """Test TableauMetricqueryserviceTypesV1Metadata
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `TableauMetricqueryserviceTypesV1Metadata`
        """
        model = TableauMetricqueryserviceTypesV1Metadata()
        if include_optional:
            return TableauMetricqueryserviceTypesV1Metadata(
                name = '',
                description = '',
                id = '',
                user_link = '',
                user_link_name = '',
                schema_version = '',
                metric_version = 56,
                definition_version = 56,
                last_updated_user = openapi_client.models.tableau/metricqueryservice/types/v1/metadata/user.tableau.metricqueryservice.types.v1.Metadata.User(
                    id = '', ),
                nested_user = openapi_client.models.tableau/metricqueryservice/types/v1/metadata/user.tableau.metricqueryservice.types.v1.Metadata.User(
                    id = '', )
            )
        else:
            return TableauMetricqueryserviceTypesV1Metadata(
        )
        """

    def testTableauMetricqueryserviceTypesV1Metadata(self):
        """Test TableauMetricqueryserviceTypesV1Metadata"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
