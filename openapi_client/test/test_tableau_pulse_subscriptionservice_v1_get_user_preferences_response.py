# coding: utf-8

"""
    Tableau Services APIs

    Open API specification for Tableau Services APIs

    The version of the OpenAPI document: latest
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.tableau_pulse_subscriptionservice_v1_get_user_preferences_response import TableauPulseSubscriptionserviceV1GetUserPreferencesResponse

class TestTableauPulseSubscriptionserviceV1GetUserPreferencesResponse(unittest.TestCase):
    """TableauPulseSubscriptionserviceV1GetUserPreferencesResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> TableauPulseSubscriptionserviceV1GetUserPreferencesResponse:
        """Test TableauPulseSubscriptionserviceV1GetUserPreferencesResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `TableauPulseSubscriptionserviceV1GetUserPreferencesResponse`
        """
        model = TableauPulseSubscriptionserviceV1GetUserPreferencesResponse()
        if include_optional:
            return TableauPulseSubscriptionserviceV1GetUserPreferencesResponse(
                user_preferences_response = openapi_client.models.tableau/pulse/subscriptionservice/v1/user_preferences_response.tableau.pulse.subscriptionservice.v1.UserPreferencesResponse(
                    cadence = 'CADENCE_UNSPECIFIED', 
                    channel_preferences = [
                        openapi_client.models.tableau/pulse/subscriptionservice/types/v1/channel_preferences.tableau.pulse.subscriptionservice.types.v1.ChannelPreferences(
                            channel = 'DELIVERY_CHANNEL_UNSPECIFIED', 
                            status = 'CHANNEL_STATUS_UNSPECIFIED', 
                            availability = 'CHANNEL_AVAILABILITY_UNSPECIFIED', )
                        ], 
                    metric_grouping_preferences = openapi_client.models.tableau/pulse/subscriptionservice/types/v1/metric_grouping_preferences.tableau.pulse.subscriptionservice.types.v1.MetricGroupingPreferences(
                        group_by = 'GROUP_BY_UNSPECIFIED', 
                        sort_order = 'SORT_ORDER_UNSPECIFIED', ), )
            )
        else:
            return TableauPulseSubscriptionserviceV1GetUserPreferencesResponse(
        )
        """

    def testTableauPulseSubscriptionserviceV1GetUserPreferencesResponse(self):
        """Test TableauPulseSubscriptionserviceV1GetUserPreferencesResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
