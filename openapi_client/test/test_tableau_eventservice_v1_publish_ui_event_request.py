# coding: utf-8

"""
    Tableau Services APIs

    Open API specification for Tableau Services APIs

    The version of the OpenAPI document: latest
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.tableau_eventservice_v1_publish_ui_event_request import TableauEventserviceV1PublishUIEventRequest

class TestTableauEventserviceV1PublishUIEventRequest(unittest.TestCase):
    """TableauEventserviceV1PublishUIEventRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> TableauEventserviceV1PublishUIEventRequest:
        """Test TableauEventserviceV1PublishUIEventRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `TableauEventserviceV1PublishUIEventRequest`
        """
        model = TableauEventserviceV1PublishUIEventRequest()
        if include_optional:
            return TableauEventserviceV1PublishUIEventRequest(
                action = '',
                data_source_id = '',
                metric_id = '',
                scoped_metric_id = '',
                feature_flags = '',
                metric_definition_type = 'METRIC_DEFINITION_TYPE_UNSPECIFIED',
                timestamp = '',
                browser = '',
                language = '',
                locale = '',
                embedded_api_version = '',
                tableau_version = ''
            )
        else:
            return TableauEventserviceV1PublishUIEventRequest(
        )
        """

    def testTableauEventserviceV1PublishUIEventRequest(self):
        """Test TableauEventserviceV1PublishUIEventRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
