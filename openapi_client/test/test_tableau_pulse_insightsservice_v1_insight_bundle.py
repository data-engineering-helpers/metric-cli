# coding: utf-8

"""
    Tableau Services APIs

    Open API specification for Tableau Services APIs

    The version of the OpenAPI document: latest
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.tableau_pulse_insightsservice_v1_insight_bundle import TableauPulseInsightsserviceV1InsightBundle

class TestTableauPulseInsightsserviceV1InsightBundle(unittest.TestCase):
    """TableauPulseInsightsserviceV1InsightBundle unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> TableauPulseInsightsserviceV1InsightBundle:
        """Test TableauPulseInsightsserviceV1InsightBundle
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `TableauPulseInsightsserviceV1InsightBundle`
        """
        model = TableauPulseInsightsserviceV1InsightBundle()
        if include_optional:
            return TableauPulseInsightsserviceV1InsightBundle(
                insight_groups = [
                    openapi_client.models.tableau/pulse/insightsservice/v1/insight_group.tableau.pulse.insightsservice.v1.InsightGroup(
                        type = '', 
                        insights = [
                            openapi_client.models.tableau/pulse/insightsservice/v1/insight_response.tableau.pulse.insightsservice.v1.InsightResponse(
                                result = openapi_client.models.tableau/pulse/insightsservice/v1/insight.tableau.pulse.insightsservice.v1.Insight(
                                    type = '', 
                                    version = 56, 
                                    content = '', 
                                    markup = '', 
                                    viz = null, 
                                    facts = null, 
                                    characterization = 'CHARACTERIZATION_UNSPECIFIED', 
                                    question = '', 
                                    score = 1.337, 
                                    id = '', 
                                    insight_feedback_metadata = openapi_client.models.tableau/pulse/insightsservice/types/v1/insight_feedback_metadata.tableau.pulse.insightsservice.types.v1.InsightFeedbackMetadata(
                                        type = '', 
                                        score = 1.337, 
                                        dimension_hash = '', ), 
                                    table = openapi_client.models.tableau/pulse/insightsservice/v1/table.tableau.pulse.insightsservice.v1.Table(
                                        columns = [
                                            openapi_client.models.tableau/pulse/insightsservice/v1/column_info.tableau.pulse.insightsservice.v1.ColumnInfo(
                                                label = '', )
                                            ], 
                                        rows = [
                                            openapi_client.models.tableau/pulse/insightsservice/v1/row.tableau.pulse.insightsservice.v1.Row(
                                                entries = [
                                                    openapi_client.models.tableau/pulse/insightsservice/v1/row_entry_result.tableau.pulse.insightsservice.v1.RowEntryResult(
                                                        value = openapi_client.models.tableau/pulse/insightsservice/v1/row_entry.tableau.pulse.insightsservice.v1.RowEntry(
                                                            formatted_value = '', ), 
                                                        error = openapi_client.models.tableau/pulse/insightsservice/v1/error.tableau.pulse.insightsservice.v1.Error(
                                                            code = '', 
                                                            message = '', ), )
                                                    ], )
                                            ], ), 
                                    generation_id = '', ), 
                                error = openapi_client.models.tableau/pulse/insightsservice/v1/error.tableau.pulse.insightsservice.v1.Error(
                                    code = '', 
                                    message = '', ), 
                                insight_type = '', )
                            ], 
                        summaries = [
                            openapi_client.models.tableau/pulse/insightsservice/v1/summary_response.tableau.pulse.insightsservice.v1.SummaryResponse()
                            ], 
                        error = , )
                    ],
                has_errors = True,
                characterization = 'CHARACTERIZATION_UNSPECIFIED'
            )
        else:
            return TableauPulseInsightsserviceV1InsightBundle(
        )
        """

    def testTableauPulseInsightsserviceV1InsightBundle(self):
        """Test TableauPulseInsightsserviceV1InsightBundle"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
