# coding: utf-8

"""
    Tableau Services APIs

    Open API specification for Tableau Services APIs

    The version of the OpenAPI document: latest
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.api.settings_api import SettingsApi


class TestSettingsApi(unittest.TestCase):
    """SettingsApi unit test stubs"""

    def setUp(self) -> None:
        self.api = SettingsApi()

    def tearDown(self) -> None:
        pass

    def test_analytics_extensions_service_add_analytics_extensions_connection(self) -> None:
        """Test case for analytics_extensions_service_add_analytics_extensions_connection

        Add analytics extension connection to site
        """
        pass

    def test_analytics_extensions_service_delete_analytics_extensions_connection(self) -> None:
        """Test case for analytics_extensions_service_delete_analytics_extensions_connection

        Delete analytics extension connection from site
        """
        pass

    def test_analytics_extensions_service_delete_connection_from_workbook(self) -> None:
        """Test case for analytics_extensions_service_delete_connection_from_workbook

        Remove current analytics extension connection for workbook
        """
        pass

    def test_analytics_extensions_service_get_analytics_extensions_connection(self) -> None:
        """Test case for analytics_extensions_service_get_analytics_extensions_connection

        Get analytics extension details
        """
        pass

    def test_analytics_extensions_service_get_analytics_extensions_connections(self) -> None:
        """Test case for analytics_extensions_service_get_analytics_extensions_connections

        List analytics extension connections on site
        """
        pass

    def test_analytics_extensions_service_get_analytics_extensions_server_settings(self) -> None:
        """Test case for analytics_extensions_service_get_analytics_extensions_server_settings

        Get enabled state of analytics extensions on server
        """
        pass

    def test_analytics_extensions_service_get_analytics_extensions_site_settings(self) -> None:
        """Test case for analytics_extensions_service_get_analytics_extensions_site_settings

        Get enabled state of analytics extensions on site
        """
        pass

    def test_analytics_extensions_service_get_connection_options_for_workbook(self) -> None:
        """Test case for analytics_extensions_service_get_connection_options_for_workbook

        List analytics extension connections of workbook
        """
        pass

    def test_analytics_extensions_service_get_selected_connection_for_workbook(self) -> None:
        """Test case for analytics_extensions_service_get_selected_connection_for_workbook

        Get current analytics extension for workbook
        """
        pass

    def test_analytics_extensions_service_update_analytics_extensions_connection(self) -> None:
        """Test case for analytics_extensions_service_update_analytics_extensions_connection

        Update analytics extension connection of site
        """
        pass

    def test_analytics_extensions_service_update_analytics_extensions_server_settings(self) -> None:
        """Test case for analytics_extensions_service_update_analytics_extensions_server_settings

        Enable/disable analytics extensions on server
        """
        pass

    def test_analytics_extensions_service_update_analytics_extensions_site_settings(self) -> None:
        """Test case for analytics_extensions_service_update_analytics_extensions_site_settings

        Update enabled state of analytics extensions on site
        """
        pass

    def test_analytics_extensions_service_update_workbook_with_connection(self) -> None:
        """Test case for analytics_extensions_service_update_workbook_with_connection

        Update analytics extension for workbook
        """
        pass


if __name__ == '__main__':
    unittest.main()
