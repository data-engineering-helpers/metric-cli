# coding: utf-8

"""
    Tableau Services APIs

    Open API specification for Tableau Services APIs

    The version of the OpenAPI document: latest
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.tableau_metricqueryservice_types_v1_definition_specification import TableauMetricqueryserviceTypesV1DefinitionSpecification

class TestTableauMetricqueryserviceTypesV1DefinitionSpecification(unittest.TestCase):
    """TableauMetricqueryserviceTypesV1DefinitionSpecification unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> TableauMetricqueryserviceTypesV1DefinitionSpecification:
        """Test TableauMetricqueryserviceTypesV1DefinitionSpecification
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `TableauMetricqueryserviceTypesV1DefinitionSpecification`
        """
        model = TableauMetricqueryserviceTypesV1DefinitionSpecification()
        if include_optional:
            return TableauMetricqueryserviceTypesV1DefinitionSpecification(
                datasource = openapi_client.models.tableau/metricqueryservice/types/v1/datasource.tableau.metricqueryservice.types.v1.Datasource(
                    id = '', ),
                basic_specification = openapi_client.models.tableau/metricqueryservice/types/v1/basic_specification.tableau.metricqueryservice.types.v1.BasicSpecification(
                    measure = openapi_client.models.tableau/metricqueryservice/types/v1/measure.tableau.metricqueryservice.types.v1.Measure(
                        field = '', 
                        aggregation = 'AGGREGATION_UNSPECIFIED', ), 
                    time_dimension = openapi_client.models.tableau/metricqueryservice/types/v1/time_dimension.tableau.metricqueryservice.types.v1.TimeDimension(
                        field = '', ), 
                    filters = [
                        openapi_client.models.tableau/metricqueryservice/types/v1/filter.tableau.metricqueryservice.types.v1.Filter(
                            field = '', 
                            operator = 'OPERATOR_UNSPECIFIED', 
                            values = [
                                ''
                                ], 
                            include_null = True, 
                            categorical_values = [
                                openapi_client.models.tableau/metricqueryservice/types/v1/categorical_value.tableau.metricqueryservice.types.v1.CategoricalValue(
                                    string_value = '', 
                                    bool_value = True, 
                                    null_value = 'NULL_VALUE', )
                                ], )
                        ], ),
                abstract_query_specification = openapi_client.models.tableau/metricqueryservice/types/v1/abstract_query_specification.tableau.metricqueryservice.types.v1.AbstractQuerySpecification(
                    abstract_query_string = '', ),
                viz_state_specification = openapi_client.models.tableau/metricqueryservice/types/v1/viz_state_specification.tableau.metricqueryservice.types.v1.VizStateSpecification(
                    viz_state_string = '', ),
                is_running_total = True
            )
        else:
            return TableauMetricqueryserviceTypesV1DefinitionSpecification(
        )
        """

    def testTableauMetricqueryserviceTypesV1DefinitionSpecification(self):
        """Test TableauMetricqueryserviceTypesV1DefinitionSpecification"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
