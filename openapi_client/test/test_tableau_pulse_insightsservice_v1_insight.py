# coding: utf-8

"""
    Tableau Services APIs

    Open API specification for Tableau Services APIs

    The version of the OpenAPI document: latest
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.tableau_pulse_insightsservice_v1_insight import TableauPulseInsightsserviceV1Insight

class TestTableauPulseInsightsserviceV1Insight(unittest.TestCase):
    """TableauPulseInsightsserviceV1Insight unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> TableauPulseInsightsserviceV1Insight:
        """Test TableauPulseInsightsserviceV1Insight
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `TableauPulseInsightsserviceV1Insight`
        """
        model = TableauPulseInsightsserviceV1Insight()
        if include_optional:
            return TableauPulseInsightsserviceV1Insight(
                type = '',
                version = 56,
                content = '',
                markup = '',
                viz = None,
                facts = None,
                characterization = 'CHARACTERIZATION_UNSPECIFIED',
                question = '',
                score = 1.337,
                id = '',
                insight_feedback_metadata = openapi_client.models.tableau/pulse/insightsservice/types/v1/insight_feedback_metadata.tableau.pulse.insightsservice.types.v1.InsightFeedbackMetadata(
                    type = '', 
                    score = 1.337, 
                    dimension_hash = '', ),
                table = openapi_client.models.tableau/pulse/insightsservice/v1/table.tableau.pulse.insightsservice.v1.Table(
                    columns = [
                        openapi_client.models.tableau/pulse/insightsservice/v1/column_info.tableau.pulse.insightsservice.v1.ColumnInfo(
                            label = '', )
                        ], 
                    rows = [
                        openapi_client.models.tableau/pulse/insightsservice/v1/row.tableau.pulse.insightsservice.v1.Row(
                            entries = [
                                openapi_client.models.tableau/pulse/insightsservice/v1/row_entry_result.tableau.pulse.insightsservice.v1.RowEntryResult(
                                    value = openapi_client.models.tableau/pulse/insightsservice/v1/row_entry.tableau.pulse.insightsservice.v1.RowEntry(
                                        formatted_value = '', ), 
                                    error = openapi_client.models.tableau/pulse/insightsservice/v1/error.tableau.pulse.insightsservice.v1.Error(
                                        code = '', 
                                        message = '', ), )
                                ], )
                        ], ),
                generation_id = ''
            )
        else:
            return TableauPulseInsightsserviceV1Insight(
        )
        """

    def testTableauPulseInsightsserviceV1Insight(self):
        """Test TableauPulseInsightsserviceV1Insight"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
