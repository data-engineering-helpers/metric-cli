# coding: utf-8

"""
    Tableau Services APIs

    Open API specification for Tableau Services APIs

    The version of the OpenAPI document: latest
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.tableau_pulse_insightsservice_v1_row import TableauPulseInsightsserviceV1Row

class TestTableauPulseInsightsserviceV1Row(unittest.TestCase):
    """TableauPulseInsightsserviceV1Row unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> TableauPulseInsightsserviceV1Row:
        """Test TableauPulseInsightsserviceV1Row
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `TableauPulseInsightsserviceV1Row`
        """
        model = TableauPulseInsightsserviceV1Row()
        if include_optional:
            return TableauPulseInsightsserviceV1Row(
                entries = [
                    openapi_client.models.tableau/pulse/insightsservice/v1/row_entry_result.tableau.pulse.insightsservice.v1.RowEntryResult(
                        value = openapi_client.models.tableau/pulse/insightsservice/v1/row_entry.tableau.pulse.insightsservice.v1.RowEntry(
                            formatted_value = '', ), 
                        error = openapi_client.models.tableau/pulse/insightsservice/v1/error.tableau.pulse.insightsservice.v1.Error(
                            code = '', 
                            message = '', ), )
                    ]
            )
        else:
            return TableauPulseInsightsserviceV1Row(
        )
        """

    def testTableauPulseInsightsserviceV1Row(self):
        """Test TableauPulseInsightsserviceV1Row"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
