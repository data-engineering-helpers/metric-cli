# coding: utf-8

"""
    Tableau Services APIs

    Open API specification for Tableau Services APIs

    The version of the OpenAPI document: latest
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.tableau_analyticsextensions_v1_connection_item import TableauAnalyticsextensionsV1ConnectionItem

class TestTableauAnalyticsextensionsV1ConnectionItem(unittest.TestCase):
    """TableauAnalyticsextensionsV1ConnectionItem unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> TableauAnalyticsextensionsV1ConnectionItem:
        """Test TableauAnalyticsextensionsV1ConnectionItem
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `TableauAnalyticsextensionsV1ConnectionItem`
        """
        model = TableauAnalyticsextensionsV1ConnectionItem()
        if include_optional:
            return TableauAnalyticsextensionsV1ConnectionItem(
                host = '',
                port = 56,
                is_auth_enabled = True,
                username = '',
                password = '',
                is_ssl_enabled = True,
                connection_brief = openapi_client.models.tableau/analyticsextensions/v1/connection_brief.tableau.analyticsextensions.v1.ConnectionBrief(
                    connection_name = '', 
                    connection_type = 'UNDEFINED', ),
                connection_luid = ''
            )
        else:
            return TableauAnalyticsextensionsV1ConnectionItem(
        )
        """

    def testTableauAnalyticsextensionsV1ConnectionItem(self):
        """Test TableauAnalyticsextensionsV1ConnectionItem"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
