# coding: utf-8

"""
    Tableau Services APIs

    Open API specification for Tableau Services APIs

    The version of the OpenAPI document: latest
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.tableau_metricqueryservice_types_v1_metric_group import TableauMetricqueryserviceTypesV1MetricGroup

class TestTableauMetricqueryserviceTypesV1MetricGroup(unittest.TestCase):
    """TableauMetricqueryserviceTypesV1MetricGroup unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> TableauMetricqueryserviceTypesV1MetricGroup:
        """Test TableauMetricqueryserviceTypesV1MetricGroup
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `TableauMetricqueryserviceTypesV1MetricGroup`
        """
        model = TableauMetricqueryserviceTypesV1MetricGroup()
        if include_optional:
            return TableauMetricqueryserviceTypesV1MetricGroup(
                group_metadata = openapi_client.models.tableau/metricqueryservice/types/v1/metric_group/group_metadata.tableau.metricqueryservice.types.v1.MetricGroup.GroupMetadata(
                    group_label = '', ),
                metrics = [
                    openapi_client.models.tableau/metricqueryservice/types/v1/metric.tableau.metricqueryservice.types.v1.Metric(
                        id = '', 
                        specification = openapi_client.models.tableau/metricqueryservice/types/v1/metric_specification.tableau.metricqueryservice.types.v1.MetricSpecification(
                            filters = [
                                openapi_client.models.tableau/metricqueryservice/types/v1/filter.tableau.metricqueryservice.types.v1.Filter(
                                    field = '', 
                                    operator = 'OPERATOR_UNSPECIFIED', 
                                    values = [
                                        ''
                                        ], 
                                    include_null = True, 
                                    categorical_values = [
                                        openapi_client.models.tableau/metricqueryservice/types/v1/categorical_value.tableau.metricqueryservice.types.v1.CategoricalValue(
                                            string_value = '', 
                                            bool_value = True, 
                                            null_value = 'NULL_VALUE', )
                                        ], )
                                ], 
                            measurement_period = openapi_client.models.tableau/metricqueryservice/types/v1/measurement_period.tableau.metricqueryservice.types.v1.MeasurementPeriod(
                                granularity = 'GRANULARITY_UNSPECIFIED', 
                                range = 'RANGE_UNSPECIFIED', ), 
                            comparison = openapi_client.models.tableau/metricqueryservice/types/v1/compare_config.tableau.metricqueryservice.types.v1.CompareConfig(), ), 
                        definition_id = '', 
                        is_default = True, 
                        schema_version = '', 
                        metric_version = 56, 
                        goals = openapi_client.models.tableau/metricqueryservice/types/v1/metric_goals.tableau.metricqueryservice.types.v1.MetricGoals(
                            target = openapi_client.models.tableau/metricqueryservice/types/v1/target_value_goal.tableau.metricqueryservice.types.v1.TargetValueGoal(
                                value = 1.337, ), ), 
                        is_followed = True, )
                    ],
                nested_group_metadata = openapi_client.models.tableau/metricqueryservice/types/v1/metric_group/group_metadata.tableau.metricqueryservice.types.v1.MetricGroup.GroupMetadata(
                    group_label = '', )
            )
        else:
            return TableauMetricqueryserviceTypesV1MetricGroup(
        )
        """

    def testTableauMetricqueryserviceTypesV1MetricGroup(self):
        """Test TableauMetricqueryserviceTypesV1MetricGroup"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
