# coding: utf-8

"""
    Tableau Services APIs

    Open API specification for Tableau Services APIs

    The version of the OpenAPI document: latest
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.tableau_pulse_subscriptionservice_types_v1_subscription import TableauPulseSubscriptionserviceTypesV1Subscription

class TestTableauPulseSubscriptionserviceTypesV1Subscription(unittest.TestCase):
    """TableauPulseSubscriptionserviceTypesV1Subscription unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> TableauPulseSubscriptionserviceTypesV1Subscription:
        """Test TableauPulseSubscriptionserviceTypesV1Subscription
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `TableauPulseSubscriptionserviceTypesV1Subscription`
        """
        model = TableauPulseSubscriptionserviceTypesV1Subscription()
        if include_optional:
            return TableauPulseSubscriptionserviceTypesV1Subscription(
                id = '',
                metric_id = '',
                follower = openapi_client.models.tableau/pulse/subscriptionservice/types/v1/follower.tableau.pulse.subscriptionservice.types.v1.Follower(
                    user_id = '', 
                    group_id = '', ),
                create_time = '',
                update_time = ''
            )
        else:
            return TableauPulseSubscriptionserviceTypesV1Subscription(
        )
        """

    def testTableauPulseSubscriptionserviceTypesV1Subscription(self):
        """Test TableauPulseSubscriptionserviceTypesV1Subscription"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
