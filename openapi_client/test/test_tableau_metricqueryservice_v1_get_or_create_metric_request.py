# coding: utf-8

"""
    Tableau Services APIs

    Open API specification for Tableau Services APIs

    The version of the OpenAPI document: latest
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.tableau_metricqueryservice_v1_get_or_create_metric_request import TableauMetricqueryserviceV1GetOrCreateMetricRequest

class TestTableauMetricqueryserviceV1GetOrCreateMetricRequest(unittest.TestCase):
    """TableauMetricqueryserviceV1GetOrCreateMetricRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> TableauMetricqueryserviceV1GetOrCreateMetricRequest:
        """Test TableauMetricqueryserviceV1GetOrCreateMetricRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `TableauMetricqueryserviceV1GetOrCreateMetricRequest`
        """
        model = TableauMetricqueryserviceV1GetOrCreateMetricRequest()
        if include_optional:
            return TableauMetricqueryserviceV1GetOrCreateMetricRequest(
                definition_id = '',
                specification = openapi_client.models.tableau/metricqueryservice/types/v1/metric_specification.tableau.metricqueryservice.types.v1.MetricSpecification(
                    filters = [
                        openapi_client.models.tableau/metricqueryservice/types/v1/filter.tableau.metricqueryservice.types.v1.Filter(
                            field = '', 
                            operator = 'OPERATOR_UNSPECIFIED', 
                            values = [
                                ''
                                ], 
                            include_null = True, 
                            categorical_values = [
                                openapi_client.models.tableau/metricqueryservice/types/v1/categorical_value.tableau.metricqueryservice.types.v1.CategoricalValue(
                                    string_value = '', 
                                    bool_value = True, 
                                    null_value = 'NULL_VALUE', )
                                ], )
                        ], 
                    measurement_period = openapi_client.models.tableau/metricqueryservice/types/v1/measurement_period.tableau.metricqueryservice.types.v1.MeasurementPeriod(
                        granularity = 'GRANULARITY_UNSPECIFIED', 
                        range = 'RANGE_UNSPECIFIED', ), 
                    comparison = openapi_client.models.tableau/metricqueryservice/types/v1/compare_config.tableau.metricqueryservice.types.v1.CompareConfig(), )
            )
        else:
            return TableauMetricqueryserviceV1GetOrCreateMetricRequest(
        )
        """

    def testTableauMetricqueryserviceV1GetOrCreateMetricRequest(self):
        """Test TableauMetricqueryserviceV1GetOrCreateMetricRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
