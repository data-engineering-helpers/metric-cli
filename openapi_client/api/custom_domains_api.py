# coding: utf-8

"""
    Tableau Services APIs

    Open API specification for Tableau Services APIs

    The version of the OpenAPI document: latest
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501

import warnings
from pydantic import validate_call, Field, StrictFloat, StrictStr, StrictInt
from typing import Any, Dict, List, Optional, Tuple, Union
from typing_extensions import Annotated

from pydantic import StrictStr
from typing import Optional
from openapi_client.models.tableau_customdomains_v1_delete_site_custom_domain_settings_response import TableauCustomdomainsV1DeleteSiteCustomDomainSettingsResponse
from openapi_client.models.tableau_customdomains_v1_get_site_custom_domain_response import TableauCustomdomainsV1GetSiteCustomDomainResponse
from openapi_client.models.tableau_customdomains_v1_site_custom_domain_settings_request import TableauCustomdomainsV1SiteCustomDomainSettingsRequest
from openapi_client.models.tableau_customdomains_v1_site_custom_domain_settings_response import TableauCustomdomainsV1SiteCustomDomainSettingsResponse

from openapi_client.api_client import ApiClient, RequestSerialized
from openapi_client.api_response import ApiResponse
from openapi_client.rest import RESTResponseType


class CustomDomainsApi:
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None) -> None:
        if api_client is None:
            api_client = ApiClient.get_default()
        self.api_client = api_client


    @validate_call
    def custom_domains_service_create_site_custom_domain_settings(
        self,
        site_luid: StrictStr,
        x_tableau_auth: Optional[StrictStr] = None,
        tableau_customdomains_v1_site_custom_domain_settings_request: Optional[TableauCustomdomainsV1SiteCustomDomainSettingsRequest] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> TableauCustomdomainsV1SiteCustomDomainSettingsResponse:
        """Create custom domain settings

        <a name='create_custom_domain_settings'></a>Starts the process of custom domain setup for a Tableau site. <br/>For more information, see [Setup Steps to Enable a Custom Domain](#setup_steps_to_enable_a_custom_domain).   > **Version:** Available in API 3.21 (Tableau Cloud October 2023) and later. Not available for Tableau Server. *[Versioning Overview](https://help.tableau.com/current/api/rest_api/en-us/REST/rest_api_concepts_versions.htm)*   > **Permissions:** Only users  with administrator permissions can create a custom domain for a site. *[Permissions Overview](https://help.tableau.com/current/api/rest_api/en-us/REST/rest_api_concepts_permissions.htm)*   > **License:** No additional license required.   > **Access Scope:** Not available.<br/>*Access Scopes Overview: [Cloud](https://help.tableau.com/current/online/en-us/connected_apps_scopes.htm)*

        :param site_luid: (required)
        :type site_luid: str
        :param x_tableau_auth:
        :type x_tableau_auth: str
        :param tableau_customdomains_v1_site_custom_domain_settings_request:
        :type tableau_customdomains_v1_site_custom_domain_settings_request: TableauCustomdomainsV1SiteCustomDomainSettingsRequest
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._custom_domains_service_create_site_custom_domain_settings_serialize(
            site_luid=site_luid,
            x_tableau_auth=x_tableau_auth,
            tableau_customdomains_v1_site_custom_domain_settings_request=tableau_customdomains_v1_site_custom_domain_settings_request,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '201': "TableauCustomdomainsV1SiteCustomDomainSettingsResponse",
            '400': "TableauError",
            '401': "TableauError",
            '500': "TableauError",
            '404': "TableauError",
            '503': "TableauError",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def custom_domains_service_create_site_custom_domain_settings_with_http_info(
        self,
        site_luid: StrictStr,
        x_tableau_auth: Optional[StrictStr] = None,
        tableau_customdomains_v1_site_custom_domain_settings_request: Optional[TableauCustomdomainsV1SiteCustomDomainSettingsRequest] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[TableauCustomdomainsV1SiteCustomDomainSettingsResponse]:
        """Create custom domain settings

        <a name='create_custom_domain_settings'></a>Starts the process of custom domain setup for a Tableau site. <br/>For more information, see [Setup Steps to Enable a Custom Domain](#setup_steps_to_enable_a_custom_domain).   > **Version:** Available in API 3.21 (Tableau Cloud October 2023) and later. Not available for Tableau Server. *[Versioning Overview](https://help.tableau.com/current/api/rest_api/en-us/REST/rest_api_concepts_versions.htm)*   > **Permissions:** Only users  with administrator permissions can create a custom domain for a site. *[Permissions Overview](https://help.tableau.com/current/api/rest_api/en-us/REST/rest_api_concepts_permissions.htm)*   > **License:** No additional license required.   > **Access Scope:** Not available.<br/>*Access Scopes Overview: [Cloud](https://help.tableau.com/current/online/en-us/connected_apps_scopes.htm)*

        :param site_luid: (required)
        :type site_luid: str
        :param x_tableau_auth:
        :type x_tableau_auth: str
        :param tableau_customdomains_v1_site_custom_domain_settings_request:
        :type tableau_customdomains_v1_site_custom_domain_settings_request: TableauCustomdomainsV1SiteCustomDomainSettingsRequest
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._custom_domains_service_create_site_custom_domain_settings_serialize(
            site_luid=site_luid,
            x_tableau_auth=x_tableau_auth,
            tableau_customdomains_v1_site_custom_domain_settings_request=tableau_customdomains_v1_site_custom_domain_settings_request,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '201': "TableauCustomdomainsV1SiteCustomDomainSettingsResponse",
            '400': "TableauError",
            '401': "TableauError",
            '500': "TableauError",
            '404': "TableauError",
            '503': "TableauError",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def custom_domains_service_create_site_custom_domain_settings_without_preload_content(
        self,
        site_luid: StrictStr,
        x_tableau_auth: Optional[StrictStr] = None,
        tableau_customdomains_v1_site_custom_domain_settings_request: Optional[TableauCustomdomainsV1SiteCustomDomainSettingsRequest] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Create custom domain settings

        <a name='create_custom_domain_settings'></a>Starts the process of custom domain setup for a Tableau site. <br/>For more information, see [Setup Steps to Enable a Custom Domain](#setup_steps_to_enable_a_custom_domain).   > **Version:** Available in API 3.21 (Tableau Cloud October 2023) and later. Not available for Tableau Server. *[Versioning Overview](https://help.tableau.com/current/api/rest_api/en-us/REST/rest_api_concepts_versions.htm)*   > **Permissions:** Only users  with administrator permissions can create a custom domain for a site. *[Permissions Overview](https://help.tableau.com/current/api/rest_api/en-us/REST/rest_api_concepts_permissions.htm)*   > **License:** No additional license required.   > **Access Scope:** Not available.<br/>*Access Scopes Overview: [Cloud](https://help.tableau.com/current/online/en-us/connected_apps_scopes.htm)*

        :param site_luid: (required)
        :type site_luid: str
        :param x_tableau_auth:
        :type x_tableau_auth: str
        :param tableau_customdomains_v1_site_custom_domain_settings_request:
        :type tableau_customdomains_v1_site_custom_domain_settings_request: TableauCustomdomainsV1SiteCustomDomainSettingsRequest
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._custom_domains_service_create_site_custom_domain_settings_serialize(
            site_luid=site_luid,
            x_tableau_auth=x_tableau_auth,
            tableau_customdomains_v1_site_custom_domain_settings_request=tableau_customdomains_v1_site_custom_domain_settings_request,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '201': "TableauCustomdomainsV1SiteCustomDomainSettingsResponse",
            '400': "TableauError",
            '401': "TableauError",
            '500': "TableauError",
            '404': "TableauError",
            '503': "TableauError",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _custom_domains_service_create_site_custom_domain_settings_serialize(
        self,
        site_luid,
        x_tableau_auth,
        tableau_customdomains_v1_site_custom_domain_settings_request,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if site_luid is not None:
            _path_params['site_luid'] = site_luid
        # process the query parameters
        # process the header parameters
        if x_tableau_auth is not None:
            _header_params['X-Tableau-Auth'] = x_tableau_auth
        # process the form parameters
        # process the body parameter
        if tableau_customdomains_v1_site_custom_domain_settings_request is not None:
            _body_params = tableau_customdomains_v1_site_custom_domain_settings_request


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/vnd.tableau.customdomains.v1.SiteCustomDomainSettingsResponse+json', 
                    'application/json'
                ]
            )

        # set the HTTP header `Content-Type`
        if _content_type:
            _header_params['Content-Type'] = _content_type
        else:
            _default_content_type = (
                self.api_client.select_header_content_type(
                    [
                        'application/vnd.tableau.customdomains.v1.SiteCustomDomainSettingsRequest+json'
                    ]
                )
            )
            if _default_content_type is not None:
                _header_params['Content-Type'] = _default_content_type

        # authentication setting
        _auth_settings: List[str] = [
        ]

        return self.api_client.param_serialize(
            method='POST',
            resource_path='/api/-/customdomains/settings/site/{site_luid}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def custom_domains_service_delete_site_custom_domain_settings(
        self,
        site_luid: StrictStr,
        x_tableau_auth: Optional[StrictStr] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> TableauCustomdomainsV1DeleteSiteCustomDomainSettingsResponse:
        """Delete custom domain settings

        Deletes the custom domain setup for a Tableau site.   > **Version:** Available in API 3.21 (Tableau Cloud October 2023) and later. Not available for Tableau Server. *[Versioning Overview](https://help.tableau.com/current/api/rest_api/en-us/REST/rest_api_concepts_versions.htm)*   > **Permissions:** Only users  with administrator permissions can view a site's custom domain settings. *[Permissions Overview](https://help.tableau.com/current/api/rest_api/en-us/REST/rest_api_concepts_permissions.htm)*   > **License:** No additional license required.   > **Access Scope:** Not available.<br/>*Access Scopes Overview: [Cloud](https://help.tableau.com/current/online/en-us/connected_apps_scopes.htm)*

        :param site_luid: (required)
        :type site_luid: str
        :param x_tableau_auth:
        :type x_tableau_auth: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._custom_domains_service_delete_site_custom_domain_settings_serialize(
            site_luid=site_luid,
            x_tableau_auth=x_tableau_auth,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '400': "TableauError",
            '401': "TableauError",
            '500': "TableauError",
            '204': "TableauCustomdomainsV1DeleteSiteCustomDomainSettingsResponse",
            '404': "TableauError",
            '503': "TableauError",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def custom_domains_service_delete_site_custom_domain_settings_with_http_info(
        self,
        site_luid: StrictStr,
        x_tableau_auth: Optional[StrictStr] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[TableauCustomdomainsV1DeleteSiteCustomDomainSettingsResponse]:
        """Delete custom domain settings

        Deletes the custom domain setup for a Tableau site.   > **Version:** Available in API 3.21 (Tableau Cloud October 2023) and later. Not available for Tableau Server. *[Versioning Overview](https://help.tableau.com/current/api/rest_api/en-us/REST/rest_api_concepts_versions.htm)*   > **Permissions:** Only users  with administrator permissions can view a site's custom domain settings. *[Permissions Overview](https://help.tableau.com/current/api/rest_api/en-us/REST/rest_api_concepts_permissions.htm)*   > **License:** No additional license required.   > **Access Scope:** Not available.<br/>*Access Scopes Overview: [Cloud](https://help.tableau.com/current/online/en-us/connected_apps_scopes.htm)*

        :param site_luid: (required)
        :type site_luid: str
        :param x_tableau_auth:
        :type x_tableau_auth: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._custom_domains_service_delete_site_custom_domain_settings_serialize(
            site_luid=site_luid,
            x_tableau_auth=x_tableau_auth,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '400': "TableauError",
            '401': "TableauError",
            '500': "TableauError",
            '204': "TableauCustomdomainsV1DeleteSiteCustomDomainSettingsResponse",
            '404': "TableauError",
            '503': "TableauError",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def custom_domains_service_delete_site_custom_domain_settings_without_preload_content(
        self,
        site_luid: StrictStr,
        x_tableau_auth: Optional[StrictStr] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Delete custom domain settings

        Deletes the custom domain setup for a Tableau site.   > **Version:** Available in API 3.21 (Tableau Cloud October 2023) and later. Not available for Tableau Server. *[Versioning Overview](https://help.tableau.com/current/api/rest_api/en-us/REST/rest_api_concepts_versions.htm)*   > **Permissions:** Only users  with administrator permissions can view a site's custom domain settings. *[Permissions Overview](https://help.tableau.com/current/api/rest_api/en-us/REST/rest_api_concepts_permissions.htm)*   > **License:** No additional license required.   > **Access Scope:** Not available.<br/>*Access Scopes Overview: [Cloud](https://help.tableau.com/current/online/en-us/connected_apps_scopes.htm)*

        :param site_luid: (required)
        :type site_luid: str
        :param x_tableau_auth:
        :type x_tableau_auth: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._custom_domains_service_delete_site_custom_domain_settings_serialize(
            site_luid=site_luid,
            x_tableau_auth=x_tableau_auth,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '400': "TableauError",
            '401': "TableauError",
            '500': "TableauError",
            '204': "TableauCustomdomainsV1DeleteSiteCustomDomainSettingsResponse",
            '404': "TableauError",
            '503': "TableauError",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _custom_domains_service_delete_site_custom_domain_settings_serialize(
        self,
        site_luid,
        x_tableau_auth,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if site_luid is not None:
            _path_params['site_luid'] = site_luid
        # process the query parameters
        # process the header parameters
        if x_tableau_auth is not None:
            _header_params['X-Tableau-Auth'] = x_tableau_auth
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/vnd.tableau.customdomains.v1.DeleteSiteCustomDomainSettingsResponse+json', 
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
        ]

        return self.api_client.param_serialize(
            method='DELETE',
            resource_path='/api/-/customdomains/settings/site/{site_luid}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def custom_domains_service_get_site_custom_domain(
        self,
        site_luid: StrictStr,
        x_tableau_auth: Optional[StrictStr] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> TableauCustomdomainsV1GetSiteCustomDomainResponse:
        """Get Custom Domain Name

        Gets the custom domain for a Tableau site, if one is provisioned. For more information about how, see [Using Custom Domains](https://help.tableau.com/current/online/en-us/custom_domain.htm).   > **Version:** Available in API 3.21 (Tableau Cloud October 2023) and later. Not available for Tableau Server. *[Versioning Overview](https://help.tableau.com/current/api/rest_api/en-us/REST/rest_api_concepts_versions.htm)*   > **Permissions:** Can be called by any user that is a member of the site associated with the custom domain. *[Permissions Overview](https://help.tableau.com/current/api/rest_api/en-us/REST/rest_api_concepts_permissions.htm)*   > **License:** No additional license required.   > **Access Scope:** Not available.<br/>*Access Scopes Overview: [Cloud](https://help.tableau.com/current/online/en-us/connected_apps_scopes.htm)*

        :param site_luid: (required)
        :type site_luid: str
        :param x_tableau_auth:
        :type x_tableau_auth: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._custom_domains_service_get_site_custom_domain_serialize(
            site_luid=site_luid,
            x_tableau_auth=x_tableau_auth,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "TableauCustomdomainsV1GetSiteCustomDomainResponse",
            '400': "TableauError",
            '401': "TableauError",
            '500': "TableauError",
            '404': "TableauError",
            '503': "TableauError",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def custom_domains_service_get_site_custom_domain_with_http_info(
        self,
        site_luid: StrictStr,
        x_tableau_auth: Optional[StrictStr] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[TableauCustomdomainsV1GetSiteCustomDomainResponse]:
        """Get Custom Domain Name

        Gets the custom domain for a Tableau site, if one is provisioned. For more information about how, see [Using Custom Domains](https://help.tableau.com/current/online/en-us/custom_domain.htm).   > **Version:** Available in API 3.21 (Tableau Cloud October 2023) and later. Not available for Tableau Server. *[Versioning Overview](https://help.tableau.com/current/api/rest_api/en-us/REST/rest_api_concepts_versions.htm)*   > **Permissions:** Can be called by any user that is a member of the site associated with the custom domain. *[Permissions Overview](https://help.tableau.com/current/api/rest_api/en-us/REST/rest_api_concepts_permissions.htm)*   > **License:** No additional license required.   > **Access Scope:** Not available.<br/>*Access Scopes Overview: [Cloud](https://help.tableau.com/current/online/en-us/connected_apps_scopes.htm)*

        :param site_luid: (required)
        :type site_luid: str
        :param x_tableau_auth:
        :type x_tableau_auth: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._custom_domains_service_get_site_custom_domain_serialize(
            site_luid=site_luid,
            x_tableau_auth=x_tableau_auth,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "TableauCustomdomainsV1GetSiteCustomDomainResponse",
            '400': "TableauError",
            '401': "TableauError",
            '500': "TableauError",
            '404': "TableauError",
            '503': "TableauError",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def custom_domains_service_get_site_custom_domain_without_preload_content(
        self,
        site_luid: StrictStr,
        x_tableau_auth: Optional[StrictStr] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Get Custom Domain Name

        Gets the custom domain for a Tableau site, if one is provisioned. For more information about how, see [Using Custom Domains](https://help.tableau.com/current/online/en-us/custom_domain.htm).   > **Version:** Available in API 3.21 (Tableau Cloud October 2023) and later. Not available for Tableau Server. *[Versioning Overview](https://help.tableau.com/current/api/rest_api/en-us/REST/rest_api_concepts_versions.htm)*   > **Permissions:** Can be called by any user that is a member of the site associated with the custom domain. *[Permissions Overview](https://help.tableau.com/current/api/rest_api/en-us/REST/rest_api_concepts_permissions.htm)*   > **License:** No additional license required.   > **Access Scope:** Not available.<br/>*Access Scopes Overview: [Cloud](https://help.tableau.com/current/online/en-us/connected_apps_scopes.htm)*

        :param site_luid: (required)
        :type site_luid: str
        :param x_tableau_auth:
        :type x_tableau_auth: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._custom_domains_service_get_site_custom_domain_serialize(
            site_luid=site_luid,
            x_tableau_auth=x_tableau_auth,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "TableauCustomdomainsV1GetSiteCustomDomainResponse",
            '400': "TableauError",
            '401': "TableauError",
            '500': "TableauError",
            '404': "TableauError",
            '503': "TableauError",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _custom_domains_service_get_site_custom_domain_serialize(
        self,
        site_luid,
        x_tableau_auth,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if site_luid is not None:
            _path_params['site_luid'] = site_luid
        # process the query parameters
        # process the header parameters
        if x_tableau_auth is not None:
            _header_params['X-Tableau-Auth'] = x_tableau_auth
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/vnd.tableau.customdomains.v1.GetSiteCustomDomainResponse+json', 
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/api/-/customdomains/site/{site_luid}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def custom_domains_service_get_site_custom_domain_settings(
        self,
        site_luid: StrictStr,
        x_tableau_auth: Optional[StrictStr] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> TableauCustomdomainsV1SiteCustomDomainSettingsResponse:
        """Get custom domain settings

        Gets the custom domain settings for a Tableau site.   > **Version:** Available in API 3.21 (Tableau Cloud October 2023) and later. Not available for Tableau Server. *[Versioning Overview](https://help.tableau.com/current/api/rest_api/en-us/REST/rest_api_concepts_versions.htm)*   > **Permissions:** Only users  with administrator permissions can view a site's custom domain settings. *[Permissions Overview](https://help.tableau.com/current/api/rest_api/en-us/REST/rest_api_concepts_permissions.htm)*   > **License:** No additional license required.   > **Access Scope:** Not available.<br/>*Access Scopes Overview: [Cloud](https://help.tableau.com/current/online/en-us/connected_apps_scopes.htm)*

        :param site_luid: (required)
        :type site_luid: str
        :param x_tableau_auth:
        :type x_tableau_auth: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._custom_domains_service_get_site_custom_domain_settings_serialize(
            site_luid=site_luid,
            x_tableau_auth=x_tableau_auth,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "TableauCustomdomainsV1SiteCustomDomainSettingsResponse",
            '400': "TableauError",
            '401': "TableauError",
            '500': "TableauError",
            '404': "TableauError",
            '503': "TableauError",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def custom_domains_service_get_site_custom_domain_settings_with_http_info(
        self,
        site_luid: StrictStr,
        x_tableau_auth: Optional[StrictStr] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[TableauCustomdomainsV1SiteCustomDomainSettingsResponse]:
        """Get custom domain settings

        Gets the custom domain settings for a Tableau site.   > **Version:** Available in API 3.21 (Tableau Cloud October 2023) and later. Not available for Tableau Server. *[Versioning Overview](https://help.tableau.com/current/api/rest_api/en-us/REST/rest_api_concepts_versions.htm)*   > **Permissions:** Only users  with administrator permissions can view a site's custom domain settings. *[Permissions Overview](https://help.tableau.com/current/api/rest_api/en-us/REST/rest_api_concepts_permissions.htm)*   > **License:** No additional license required.   > **Access Scope:** Not available.<br/>*Access Scopes Overview: [Cloud](https://help.tableau.com/current/online/en-us/connected_apps_scopes.htm)*

        :param site_luid: (required)
        :type site_luid: str
        :param x_tableau_auth:
        :type x_tableau_auth: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._custom_domains_service_get_site_custom_domain_settings_serialize(
            site_luid=site_luid,
            x_tableau_auth=x_tableau_auth,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "TableauCustomdomainsV1SiteCustomDomainSettingsResponse",
            '400': "TableauError",
            '401': "TableauError",
            '500': "TableauError",
            '404': "TableauError",
            '503': "TableauError",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def custom_domains_service_get_site_custom_domain_settings_without_preload_content(
        self,
        site_luid: StrictStr,
        x_tableau_auth: Optional[StrictStr] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Get custom domain settings

        Gets the custom domain settings for a Tableau site.   > **Version:** Available in API 3.21 (Tableau Cloud October 2023) and later. Not available for Tableau Server. *[Versioning Overview](https://help.tableau.com/current/api/rest_api/en-us/REST/rest_api_concepts_versions.htm)*   > **Permissions:** Only users  with administrator permissions can view a site's custom domain settings. *[Permissions Overview](https://help.tableau.com/current/api/rest_api/en-us/REST/rest_api_concepts_permissions.htm)*   > **License:** No additional license required.   > **Access Scope:** Not available.<br/>*Access Scopes Overview: [Cloud](https://help.tableau.com/current/online/en-us/connected_apps_scopes.htm)*

        :param site_luid: (required)
        :type site_luid: str
        :param x_tableau_auth:
        :type x_tableau_auth: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._custom_domains_service_get_site_custom_domain_settings_serialize(
            site_luid=site_luid,
            x_tableau_auth=x_tableau_auth,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "TableauCustomdomainsV1SiteCustomDomainSettingsResponse",
            '400': "TableauError",
            '401': "TableauError",
            '500': "TableauError",
            '404': "TableauError",
            '503': "TableauError",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _custom_domains_service_get_site_custom_domain_settings_serialize(
        self,
        site_luid,
        x_tableau_auth,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if site_luid is not None:
            _path_params['site_luid'] = site_luid
        # process the query parameters
        # process the header parameters
        if x_tableau_auth is not None:
            _header_params['X-Tableau-Auth'] = x_tableau_auth
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/vnd.tableau.customdomains.v1.SiteCustomDomainSettingsResponse+json', 
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/api/-/customdomains/settings/site/{site_luid}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def custom_domains_service_update_site_custom_domain_settings(
        self,
        site_luid: StrictStr,
        x_tableau_auth: Optional[StrictStr] = None,
        tableau_customdomains_v1_site_custom_domain_settings_request: Optional[TableauCustomdomainsV1SiteCustomDomainSettingsRequest] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> TableauCustomdomainsV1SiteCustomDomainSettingsResponse:
        """Update custom domain settings

        <a name='update_custom_domain_settings'></a>Updates the custom domain setup for a Tableau site. <br/>For more information, see [Setup Steps to Enable a Custom Domain](#setup_steps_to_enable_a_custom_domain).   > **Version:** Available in API 3.21 (Tableau Cloud October 2023) and later. Not available for Tableau Server. *[Versioning Overview](https://help.tableau.com/current/api/rest_api/en-us/REST/rest_api_concepts_versions.htm)*   > **Permissions:** Only users  with administrator permissions can update a site's custom domain settings. *[Permissions Overview](https://help.tableau.com/current/api/rest_api/en-us/REST/rest_api_concepts_permissions.htm)*   > **License:** No additional license required.   > **Access Scope:** Not available.<br/>*Access Scopes Overview: [Cloud](https://help.tableau.com/current/online/en-us/connected_apps_scopes.htm)*

        :param site_luid: (required)
        :type site_luid: str
        :param x_tableau_auth:
        :type x_tableau_auth: str
        :param tableau_customdomains_v1_site_custom_domain_settings_request:
        :type tableau_customdomains_v1_site_custom_domain_settings_request: TableauCustomdomainsV1SiteCustomDomainSettingsRequest
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._custom_domains_service_update_site_custom_domain_settings_serialize(
            site_luid=site_luid,
            x_tableau_auth=x_tableau_auth,
            tableau_customdomains_v1_site_custom_domain_settings_request=tableau_customdomains_v1_site_custom_domain_settings_request,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "TableauCustomdomainsV1SiteCustomDomainSettingsResponse",
            '400': "TableauError",
            '401': "TableauError",
            '500': "TableauError",
            '404': "TableauError",
            '503': "TableauError",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def custom_domains_service_update_site_custom_domain_settings_with_http_info(
        self,
        site_luid: StrictStr,
        x_tableau_auth: Optional[StrictStr] = None,
        tableau_customdomains_v1_site_custom_domain_settings_request: Optional[TableauCustomdomainsV1SiteCustomDomainSettingsRequest] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[TableauCustomdomainsV1SiteCustomDomainSettingsResponse]:
        """Update custom domain settings

        <a name='update_custom_domain_settings'></a>Updates the custom domain setup for a Tableau site. <br/>For more information, see [Setup Steps to Enable a Custom Domain](#setup_steps_to_enable_a_custom_domain).   > **Version:** Available in API 3.21 (Tableau Cloud October 2023) and later. Not available for Tableau Server. *[Versioning Overview](https://help.tableau.com/current/api/rest_api/en-us/REST/rest_api_concepts_versions.htm)*   > **Permissions:** Only users  with administrator permissions can update a site's custom domain settings. *[Permissions Overview](https://help.tableau.com/current/api/rest_api/en-us/REST/rest_api_concepts_permissions.htm)*   > **License:** No additional license required.   > **Access Scope:** Not available.<br/>*Access Scopes Overview: [Cloud](https://help.tableau.com/current/online/en-us/connected_apps_scopes.htm)*

        :param site_luid: (required)
        :type site_luid: str
        :param x_tableau_auth:
        :type x_tableau_auth: str
        :param tableau_customdomains_v1_site_custom_domain_settings_request:
        :type tableau_customdomains_v1_site_custom_domain_settings_request: TableauCustomdomainsV1SiteCustomDomainSettingsRequest
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._custom_domains_service_update_site_custom_domain_settings_serialize(
            site_luid=site_luid,
            x_tableau_auth=x_tableau_auth,
            tableau_customdomains_v1_site_custom_domain_settings_request=tableau_customdomains_v1_site_custom_domain_settings_request,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "TableauCustomdomainsV1SiteCustomDomainSettingsResponse",
            '400': "TableauError",
            '401': "TableauError",
            '500': "TableauError",
            '404': "TableauError",
            '503': "TableauError",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def custom_domains_service_update_site_custom_domain_settings_without_preload_content(
        self,
        site_luid: StrictStr,
        x_tableau_auth: Optional[StrictStr] = None,
        tableau_customdomains_v1_site_custom_domain_settings_request: Optional[TableauCustomdomainsV1SiteCustomDomainSettingsRequest] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Update custom domain settings

        <a name='update_custom_domain_settings'></a>Updates the custom domain setup for a Tableau site. <br/>For more information, see [Setup Steps to Enable a Custom Domain](#setup_steps_to_enable_a_custom_domain).   > **Version:** Available in API 3.21 (Tableau Cloud October 2023) and later. Not available for Tableau Server. *[Versioning Overview](https://help.tableau.com/current/api/rest_api/en-us/REST/rest_api_concepts_versions.htm)*   > **Permissions:** Only users  with administrator permissions can update a site's custom domain settings. *[Permissions Overview](https://help.tableau.com/current/api/rest_api/en-us/REST/rest_api_concepts_permissions.htm)*   > **License:** No additional license required.   > **Access Scope:** Not available.<br/>*Access Scopes Overview: [Cloud](https://help.tableau.com/current/online/en-us/connected_apps_scopes.htm)*

        :param site_luid: (required)
        :type site_luid: str
        :param x_tableau_auth:
        :type x_tableau_auth: str
        :param tableau_customdomains_v1_site_custom_domain_settings_request:
        :type tableau_customdomains_v1_site_custom_domain_settings_request: TableauCustomdomainsV1SiteCustomDomainSettingsRequest
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._custom_domains_service_update_site_custom_domain_settings_serialize(
            site_luid=site_luid,
            x_tableau_auth=x_tableau_auth,
            tableau_customdomains_v1_site_custom_domain_settings_request=tableau_customdomains_v1_site_custom_domain_settings_request,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "TableauCustomdomainsV1SiteCustomDomainSettingsResponse",
            '400': "TableauError",
            '401': "TableauError",
            '500': "TableauError",
            '404': "TableauError",
            '503': "TableauError",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _custom_domains_service_update_site_custom_domain_settings_serialize(
        self,
        site_luid,
        x_tableau_auth,
        tableau_customdomains_v1_site_custom_domain_settings_request,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if site_luid is not None:
            _path_params['site_luid'] = site_luid
        # process the query parameters
        # process the header parameters
        if x_tableau_auth is not None:
            _header_params['X-Tableau-Auth'] = x_tableau_auth
        # process the form parameters
        # process the body parameter
        if tableau_customdomains_v1_site_custom_domain_settings_request is not None:
            _body_params = tableau_customdomains_v1_site_custom_domain_settings_request


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/vnd.tableau.customdomains.v1.SiteCustomDomainSettingsResponse+json', 
                    'application/json'
                ]
            )

        # set the HTTP header `Content-Type`
        if _content_type:
            _header_params['Content-Type'] = _content_type
        else:
            _default_content_type = (
                self.api_client.select_header_content_type(
                    [
                        'application/vnd.tableau.customdomains.v1.SiteCustomDomainSettingsRequest+json'
                    ]
                )
            )
            if _default_content_type is not None:
                _header_params['Content-Type'] = _default_content_type

        # authentication setting
        _auth_settings: List[str] = [
        ]

        return self.api_client.param_serialize(
            method='PUT',
            resource_path='/api/-/customdomains/settings/site/{site_luid}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )


